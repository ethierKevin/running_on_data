{"ast":null,"code":"var _jsxFileName = \"/Users/kevinethier/Desktop/runningOnData/rod-frontend/src/components/UploadActivities.js\",\n  _s = $RefreshSig$();\n// src/components/UploadActivities.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadActivities = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]); // Get the first file from the FileList\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) {\n      console.error(\"Please upload a file\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file); // Append the file to the FormData object\n\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data' // Set the content type for file upload\n        }\n      });\n      console.log(response.data); // Handle success\n    } catch (error) {\n      console.error(\"There was an error uploading the file!\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload Activities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadActivities, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = UploadActivities;\nexport default UploadActivities;\nvar _c;\n$RefreshReg$(_c, \"UploadActivities\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadActivities","_s","file","setFile","handleFileChange","e","target","files","handleSubmit","preventDefault","console","error","formData","FormData","append","response","post","headers","log","data","onSubmit","children","type","accept","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kevinethier/Desktop/runningOnData/rod-frontend/src/components/UploadActivities.js"],"sourcesContent":["// src/components/UploadActivities.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst UploadActivities = () => {\n  const [file, setFile] = useState(null);\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]); // Get the first file from the FileList\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!file) {\n      console.error(\"Please upload a file\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file); // Append the file to the FormData object\n\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data' // Set the content type for file upload\n        }\n      });\n      console.log(response.data); // Handle success\n    } catch (error) {\n      console.error(\"There was an error uploading the file!\", error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"file\" accept=\".csv\" onChange={handleFileChange} required />\n      <button type=\"submit\">Upload Activities</button>\n    </form>\n  );\n};\n\nexport default UploadActivities;\n  "],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMQ,gBAAgB,GAAIC,CAAC,IAAK;IAC9BF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAI,CAACP,IAAI,EAAE;MACTQ,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAC;MACrC;IACF;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEZ,IAAI,CAAC,CAAC,CAAC;;IAE/B,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,EAAE;QAC1EK,OAAO,EAAE;UACP,cAAc,EAAE,qBAAqB,CAAC;QACxC;MACF,CAAC,CAAC;MACFP,OAAO,CAACQ,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAChE;EACF,CAAC;EAED,oBACEZ,OAAA;IAAMqB,QAAQ,EAAEZ,YAAa;IAAAa,QAAA,gBAC3BtB,OAAA;MAAOuB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAEpB,gBAAiB;MAACqB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxE9B,OAAA;MAAQuB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEX,CAAC;AAAC5B,EAAA,CAlCID,gBAAgB;AAAA8B,EAAA,GAAhB9B,gBAAgB;AAoCtB,eAAeA,gBAAgB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}